version: '3.8'

services:
  db:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=${DB}'
      - 'POSTGRES_PASSWORD=${DB_PASS}'
      - 'POSTGRES_USER=${DB_USER}'
    ports:
      - '5432:5432'
    restart: unless-stopped
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./src/test/resources/schema.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to fill tables
      - ./src/test/resources/data.sql:/docker-entrypoint-initdb.d/fill_tables.sql

  api:
    image: oddsports:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${DB}'
#      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/${DB}'
      - 'SPRING_DATASOURCE_USERNAME=${DB_USER}'
      - 'SPRING_DATASOURCE_PASSWORD=${DB_PASS}'
    volumes:
      - './logs:/logs'
    depends_on:
      db:
        condition: service_completed_successfully
    networks:
      - app-network

networks:
  app-network:


